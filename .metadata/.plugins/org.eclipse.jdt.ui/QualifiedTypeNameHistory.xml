<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Qualifier"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="java.lang.reflect.Proxy"/>
<fullyQualifiedTypeName name="com.study.maven.ijhwang.ch04.service.CommonService"/>
<fullyQualifiedTypeName name="com.sun.corba.se.impl.presentation.rmi.InvocationHandlerFactoryImpl"/>
<fullyQualifiedTypeName name="java.lang.reflect.InvocationHandler"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.study.maven.ijhwang.ch05.dao.CommonDaoImpl"/>
<fullyQualifiedTypeName name="com.study.maven.ijhwang.ch05.dao.CommonDao"/>
<fullyQualifiedTypeName name="com.study.maven.ijhwang.ch05.service.CommonService"/>
<fullyQualifiedTypeName name="org.springframework.aop.framework.ProxyFactoryBean"/>
<fullyQualifiedTypeName name="org.aopalliance.intercept.MethodInterceptor"/>
<fullyQualifiedTypeName name="org.springframework.aop.MethodBeforeAdvice"/>
<fullyQualifiedTypeName name="java.util.HashMap"/>
<fullyQualifiedTypeName name="java.util.Map"/>
<fullyQualifiedTypeName name="org.springframework.aop.AfterReturningAdvice"/>
<fullyQualifiedTypeName name="org.springframework.aop.ThrowsAdvice"/>
<fullyQualifiedTypeName name="java.lang.IllegalArgumentException"/>
<fullyQualifiedTypeName name="java.lang.Exception"/>
<fullyQualifiedTypeName name="java.lang.RuntimeException"/>
<fullyQualifiedTypeName name="org.springframework.aop.support.NameMatchMethodPointcut"/>
<fullyQualifiedTypeName name="org.springframework.aop.support.DefaultPointcutAdvisor"/>
<fullyQualifiedTypeName name="com.study.maven.ijhwang.ch05.service.CommonServiceImpl2"/>
</qualifiedTypeNameHistroy>
